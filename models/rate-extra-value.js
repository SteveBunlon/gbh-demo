// This model was generated by Forest CLI. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const RateExtraValue = sequelize.define('rateExtraValue', {
    active: {
      type: DataTypes.INTEGER,
      defaultValue: 1,
      allowNull: false,
    },
    createdAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('CURRENT_TIMESTAMP(6)'),
    },
    updatedAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('CURRENT_TIMESTAMP(6)'),
    },
    rateExtraValueId: {
      type: DataTypes.INTEGER,
      primaryKey: true,
      allowNull: false,
    },
    dayFrom: {
      type: DataTypes.INTEGER,
      allowNull: false,
    },
    dayTo: {
      type: DataTypes.INTEGER,
      allowNull: false,
    },
    valuePerDay: {
      type: DataTypes.DOUBLE,
      allowNull: false,
    },
    valueMax: {
      type: DataTypes.DOUBLE,
    },
    valuePerHour: {
      type: DataTypes.DOUBLE,
    },
  }, {
    tableName: 'rate_extra_value',
    underscored: true,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/reference-guide/relationships#adding-relationships.
  RateExtraValue.associate = (models) => {
    RateExtraValue.belongsTo(models.rateExtraSeason, {
      foreignKey: {
        name: 'rateExtraSeasonIdKey',
        field: 'rate_extra_season_id',
      },
      targetKey: 'rateExtraSeasonId',
      as: 'rateExtraSeason',
    });
    RateExtraValue.belongsTo(models.vehicle, {
      foreignKey: {
        name: 'vehicleIdKey',
        field: 'vehicle_id',
      },
      targetKey: 'vehicleId',
      as: 'vehicle',
    });
  };

  return RateExtraValue;
};
