// This model was generated by Forest CLI. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Company = sequelize.define('company', {
    companyId: {
      type: DataTypes.INTEGER,
      primaryKey: true,
      allowNull: false,
    },
    companyLabel: {
      type: DataTypes.STRING,
    },
    companyCode: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    timezoneGmt: {
      type: DataTypes.STRING,
    },
    active: {
      type: DataTypes.INTEGER,
      defaultValue: 1,
      allowNull: false,
    },
    createdAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('CURRENT_TIMESTAMP(6)'),
    },
    updatedAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('CURRENT_TIMESTAMP(6)'),
    },
    wsAddress: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    wsAddressApi: {
      type: DataTypes.STRING,
    },
    erpRealTime: {
      type: DataTypes.INTEGER,
    },
    erpRealTimeStatus: {
      type: DataTypes.INTEGER,
    },
    erpMaxDelay: {
      type: DataTypes.INTEGER,
    },
    erpTimeout: {
      type: DataTypes.INTEGER,
    },
  }, {
    tableName: 'company',
    underscored: true,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/reference-guide/relationships#adding-relationships.
  Company.associate = (models) => {
    Company.belongsToMany(models.airlineCompany, {
      through: 'companyAirlineCompany',
      foreignKey: 'company_id',
      otherKey: 'airline_company_id',
      as: 'airlineCompanyThroughCompanyAirlineCompanies',
    });
    Company.belongsToMany(models.country, {
      through: 'companyCountry',
      foreignKey: 'company_id',
      otherKey: 'country_id',
      as: 'countryThroughCompanyCountries',
    });
    Company.hasMany(models.agencyType, {
      foreignKey: {
        name: 'companyIdKey',
        field: 'company_id',
      },
      sourceKey: 'companyId',
      as: 'agencyTypes',
    });
    Company.hasMany(models.branch, {
      foreignKey: {
        name: 'companyIdKey',
        field: 'company_id',
      },
      sourceKey: 'companyId',
      as: 'branches',
    });
    Company.hasMany(models.companyCurrency, {
      foreignKey: {
        name: 'companyIdKey',
        field: 'company_id',
      },
      sourceKey: 'companyId',
      as: 'companyCurrencies',
    });
    Company.hasMany(models.companyLocale, {
      foreignKey: {
        name: 'companyIdKey',
        field: 'company_id',
      },
      sourceKey: 'companyId',
      as: 'companyLocales',
    });
    Company.hasOne(models.companySetting, {
      foreignKey: {
        name: 'companyIdKey',
        field: 'company_id',
      },
      sourceKey: 'companyId',
      as: 'companySetting',
    });
  };

  return Company;
};
