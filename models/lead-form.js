// This model was generated by Forest CLI. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const LeadForm = sequelize.define('leadForm', {
    leadFormId: {
      type: DataTypes.INTEGER,
      primaryKey: true,
      allowNull: false,
    },
    phone: {
      type: DataTypes.STRING,
    },
    email: {
      type: DataTypes.STRING,
    },
    subject: {
      type: DataTypes.STRING,
    },
    formName: {
      type: DataTypes.STRING,
    },
    campaignName: {
      type: DataTypes.STRING,
    },
    active: {
      type: DataTypes.INTEGER,
      defaultValue: 1,
      allowNull: false,
    },
    createdAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('CURRENT_TIMESTAMP(6)'),
    },
    updatedAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('CURRENT_TIMESTAMP(6)'),
    },
    name: {
      type: DataTypes.STRING,
    },
    message: {
      type: DataTypes.STRING,
    },
    status: {
      type: DataTypes.ENUM('Traité','Non traité'),
      defaultValue: "Non traité",
      allowNull: false,
    },
    statusDate: {
      type: DataTypes.DATE,
    },
  }, {
    tableName: 'lead_form',
    underscored: true,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/reference-guide/relationships#adding-relationships.
  LeadForm.associate = (models) => {
    LeadForm.belongsTo(models.branch, {
      foreignKey: {
        name: 'branchIdKey',
        field: 'branch_id',
      },
      targetKey: 'branchId',
      as: 'branch',
    });
    LeadForm.belongsTo(models.vehicleType, {
      foreignKey: {
        name: 'vehicleTypeIdKey',
        field: 'vehicle_type_id',
      },
      targetKey: 'vehicleTypeId',
      as: 'vehicleType',
    });
    LeadForm.belongsTo(models.leadFormType, {
      foreignKey: {
        name: 'leadFormTypeIdKey',
        field: 'lead_form_type_id',
      },
      targetKey: 'leadFormTypeId',
      as: 'leadFormType',
    });
    LeadForm.belongsTo(models.agency, {
      foreignKey: {
        name: 'agencyIdKey',
        field: 'agency_id',
      },
      targetKey: 'agencyId',
      as: 'agency',
    });
    LeadForm.belongsTo(models.country, {
      foreignKey: {
        name: 'countryIdKey',
        field: 'country_id',
      },
      targetKey: 'countryId',
      as: 'country',
    });
    LeadForm.hasMany(models.leadAttachment, {
      foreignKey: {
        name: 'leadFormIdKey',
        field: 'lead_form_id',
      },
      sourceKey: 'leadFormId',
      as: 'leadFormLeadAttachments',
    });
  };

  return LeadForm;
};
