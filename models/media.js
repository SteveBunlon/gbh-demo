// This model was generated by Forest CLI. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Media = sequelize.define('media', {
    mediaId: {
      type: DataTypes.INTEGER,
      primaryKey: true,
      allowNull: false,
    },
    mediaPath: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    displayOrder: {
      type: DataTypes.INTEGER,
    },
    active: {
      type: DataTypes.INTEGER,
      defaultValue: 1,
      allowNull: false,
    },
    createdAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('CURRENT_TIMESTAMP(6)'),
    },
    updatedAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal('CURRENT_TIMESTAMP(6)'),
    },
  }, {
    tableName: 'media',
    underscored: true,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/reference-guide/relationships#adding-relationships.
  Media.associate = (models) => {
    Media.belongsTo(models.mediaType, {
      foreignKey: {
        name: 'mediaTypeIdKey',
        field: 'media_type_id',
      },
      targetKey: 'mediaTypeId',
      as: 'mediaType',
    });
    Media.belongsToMany(models.extra, {
      through: 'extraMedia',
      foreignKey: 'media_id',
      otherKey: 'extra_id',
      as: 'extraThroughExtraMedias',
    });
    Media.belongsToMany(models.groupExtra, {
      through: 'groupExtraMedia',
      foreignKey: 'media_id',
      otherKey: 'group_extra_id',
      as: 'groupExtraThroughGroupExtraMedias',
    });
    Media.hasMany(models.attribute, {
      foreignKey: {
        name: 'mediaIdKey',
        field: 'media_id',
      },
      sourceKey: 'mediaId',
      as: 'attributes',
    });
    Media.hasMany(models.brand, {
      foreignKey: {
        name: 'mediaIdKey',
        field: 'media_id',
      },
      sourceKey: 'mediaId',
      as: 'brands',
    });
    Media.hasMany(models.extraDetail, {
      foreignKey: {
        name: 'mediaIdKey',
        field: 'media_id',
      },
      sourceKey: 'mediaId',
      as: 'extraDetails',
    });
    Media.hasMany(models.includedService, {
      foreignKey: {
        name: 'mediaIdKey',
        field: 'media_id',
      },
      sourceKey: 'mediaId',
      as: 'includedServices',
    });
    Media.hasMany(models.mediaTranslation, {
      foreignKey: {
        name: 'mediaIdKey',
        field: 'media_id',
      },
      sourceKey: 'mediaId',
      as: 'mediaTranslations',
    });
    Media.hasMany(models.vehicleTypeFilter, {
      foreignKey: {
        name: 'mediaIdKey',
        field: 'media_id',
      },
      sourceKey: 'mediaId',
      as: 'vehicleTypeFilters',
    });
  };

  return Media;
};
